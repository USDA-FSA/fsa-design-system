// scss-lint:disable SelectorFormat
.OUTLINE {
  outline: 1px solid red;
}

.ds-icn {
  &__github {
    display: inline-block;
    vertical-align: middle;
    margin-right: $size-base;
    width: $size-medium;
    height: $size-medium;
    margin-top: -2px;
  }
}

.ds-btn {

  $button-download        : $color-fsa-primary-900;
  $button-download-text   : $button-text;
  $button-download-hover  : shade($button-download, 25%);
  $button-download-active : shade($button-download, 45%);

  &--start {

    background-color: $button-download;
    color: $button-download-text;

    &:visited {
      color: $button-download-text;
    }

    // &:hover {
    //   color: $button-download-text;
    // }

    // &:hover:not([disabled]) {
    //   background-color: $button-download-hover;
    // }

    &:hover:not([disabled]),
    &:focus:not([disabled]),
    &:active:not([disabled]) {
      color: $button-download-text;
      background-color: $button-download-active;
    }

    &.is-active {

      $getting-started-active-color: $color-fsa-site-bg;

      background-color: $getting-started-active-color;
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
      color: $color-fsa-base;
      position: relative;

      &:after {
        content: '';
        position: absolute;
        top: 100%;
        right: 0;
        left: 0;
        height: ($size-default + .1rem); // magic number
        background-color: $getting-started-active-color;
      }

      &:focus:after,
      &:hover:after {
        background-color: $button-download-hover;
      }

    }

  }

}

.ds-screen {
  border: 1px solid $color-fsa-tertiary-200;
  box-shadow: 0 0 $size-base transparentize($color-fsa-tertiary-200, .1);
}

.sr-only {
  @include sr-only;
}

// This isn't broken in fsa-style, but is with Ruby-based Sass, which strips out the :not() rule
.fsa-table__sort:hover:not(.fsa-table__sort--descending, .fsa-table__sort--ascending):after {
  background-image: url('#{$image-path}/chevron-up.png');
  background-image: url('#{$image-path}/chevron-up.svg');
  opacity: .4;
}

// This isn't broken in fsa-style, but for is with Ruby-based Sass
// scss-lint:disable QualifyingElement
span.fsa-stepped-tabs__label,
div.fsa-stepped-tabs__label {
  cursor: initial;
}

.ds-code-toggle {

  padding-right: $size-default;
  padding-left: $size-default;

  label {
    margin-right: 0;
    font-weight: $font-bold;
  }

}

html:hover body::before {
  // scss-lint:disable ImportantRule
  display: none !important; // hide breakpoint bar
}
